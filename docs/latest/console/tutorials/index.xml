<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动手教程 on INFINI Labs</title>
    <link>/docs/latest/console/tutorials/</link>
    <description>Recent content in 动手教程 on INFINI Labs</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="/docs/latest/console/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何指定内置账户名和密码启动 INFINI Console</title>
      <link>/docs/latest/console/tutorials/start_with_specify_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/start_with_specify_user/</guid>
      <description>如何指定内置账户名和密码启动 INFINI Console#准备# 下载并安装最新版 INFINI Console 开启 INFINI Console 安全功能  INFINI Console 内置账户#INFINI Console 在开启安全的情况下，内置了一个管理员账户。 在不指定账户名和密码的情况下，INFINI Console 默认情况下内置账户的用户名和密码都是 admin。
指定账户名和密码启动 INFINI Console#INFINI Console 支持使用环境变量的方式指定账户名和密码启动，下面以 Macos 操作系统为例：
BOOTSTRAP_USERNAME=admin BOOTSTRAP_PASSWORD=123456 ./console-mac-amd64
禁用内置账户#由于使用内置账户，可能存在安全隐患，例如密码设置太简单等。因此当我们使用内置账户 登录 INFINI Console 创建新的管理员账号之后，可以使用新管理员账号登录，然后在 系统管理&amp;gt;安全设置 里面禁用内置账户。禁用之后就无法使用内置账户登录 INFINI Console了。
创建管理员账户#INFINI Console 内置了一个管理员角色 Administrator，创建新用户的时候赋予这个角色，新用户就拥有管理员权限了。
点击 INFINI Console 左侧菜单 系统管理》安全设置，选择用户 Tab 页进入账户管理页。然后点击新建按钮，进入创建用户页面
 输入用户名 root 角色选择 Administrator 点击保存按钮提交 将保存成功后的初始密码保存下来备用  使用新建的管理员禁用内置用户#使用上一步创建好的 root 用户和密码登录 INFINI Console, 然后在 系统管理&amp;gt;安全设置 里面打开禁用内置账户开关，看到如下界面时表示操作成功。</description>
    </item>
    
    <item>
      <title>如何轻松创建一个 Elasticsearch “游客” 用户</title>
      <link>/docs/latest/console/tutorials/create_readonly_account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/create_readonly_account/</guid>
      <description>如何轻松创建一个 Elasticsearch “游客” 用户#简介#有些情况下，我们想给客户分享一下某些功能或者数据，但是又不希望数据被修改。 这个时候我们就需要创建一个“游客” 用户了。本文简单地介绍了如何使用 INFINI Console 创建&amp;quot;游客&amp;quot;用户。
准备# 下载并安装最新版 INFINI Console 开启 INFINI Console 安全功能  创建角色#点击 INFINI Console 左侧菜单 系统管理》安全设置，选择角色 Tab 页进入角色管理页。
新建平台角色 readonly#点击新建按钮，选择平台角色，新建一个平台角色 readonly，操作步骤如下：
 输入角色名称 readonly 展开所有的功能权限 除了系统设置下面的安全功能，其他所有的功能都选择 Read 权限。 系统设置下面的安全功能 设置为 None 权限。 点击保存按钮提交   选择某个功能的 All 权限代表拥有这个功能的读和写的操作权限， Read 代表只拥有读的权限， None 代表没有该功能权限（用户登录之后菜单中没有该功能）
 新建数据角色 es-v7171#点击新建按钮，选择数据角色，新建一个数据角色 es-v7171，操作步骤如下：</description>
    </item>
    
    <item>
      <title>如何给不同 INFINI Console 账户分配不同 Elasticsearch 集群访问权限</title>
      <link>/docs/latest/console/tutorials/role_with_different_rights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/role_with_different_rights/</guid>
      <description>如何给不同 INFINI Console 账户分配不同 Elasticsearch 集群访问权限#简介#本文将介绍使用 INFINI Console 给两个不同账户分配两个不同的 Elasticsearch 集群管理权限
准备# 下载并安装最新版 INFINI Console 开启 INFINI Console 安全功能 注册至少两个 Elasticsearch 集群到 INFINI Console  创建角色#点击 INFINI Console 左侧菜单 系统管理》安全设置，选择角色 Tab 页进入角色管理页。
新建平台角色 platform_role#点击新建按钮，选择平台角色，新建一个平台角色 platform_role，操作步骤如下：
 输入角色名称 platform_role 展开所有的功能权限 除了系统设置下面的安全功能，其他所有的功能都选择 All 权限。 系统设置下面的安全功能 设置为 None 权限。 点击保存按钮提交   选择某个功能的 All 权限代表拥有这个功能的读和写的操作权限， Read 代表只拥有读的权限， None 代表没有该功能权限（用户登录之后菜单中没有该功能）</description>
    </item>
    
    <item>
      <title>如何给 INFINI Console 账户分配 Elasticsearch 索引级别权限</title>
      <link>/docs/latest/console/tutorials/role_with_index_limit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/role_with_index_limit/</guid>
      <description>如何给 INFINI Console 账户分配 Elasticsearch 索引级别权限#简介#本文将介绍使用 INFINI Console 限定某个账户只有 Elasticsearch 集群里面某些索引的管理权限
准备# 下载并安装最新版 INFINI Console 开启 INFINI Console 安全功能 注册至少两个 Elasticsearch 集群到 INFINI Console  创建角色#点击 INFINI Console 左侧菜单 系统管理》安全设置，选择角色 Tab 页进入角色管理页。
新建平台角色 platform_role#点击新建按钮，选择平台角色，新建一个平台角色 platform_role
新建数据角色 test_index_only#点击新建按钮，选择数据角色，新建一个数据角色 test_index_only, 然后做如下配置：
 将集群只选择 es-v7140 （限制该角色只有 Elasticsearch 集群 es-v7140 的访问权限 ） 设置索引权限 索引只输入索引 pattern test* （限制该角色只有索引名称匹配 test* 的索引访问权限）  配置完成之后点击保存按钮提交。</description>
    </item>
    
    <item>
      <title>如何监控 Elasticsearch 里面的慢查询请求</title>
      <link>/docs/latest/console/tutorials/cluster_slow_request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/cluster_slow_request/</guid>
      <description>如何监控 Elasticsearch 里面的慢查询请求#简介#很多时候，Elasticsearch 集群会出现数据写入或者查询流量高峰期的情况，这个时候 Elasticsearch 集群压力会很大，通过对 Elasticsearch 索引查询的延迟的监控告警。 可以让我们定位 Elasticsearch 集群的压力主要集中在哪些索引。本文将介绍如何使用 INFINI Console 告警功能监控 Elasticsearch 里面的慢查询请求索引。
准备# 下载并安装最新版 INFINI Console 使用INFINI Console 注册 Elasticsearch 集群  创建告警规则#在浏览器中打开 INFINI Console, 点击左侧菜单 告警管理》规则管理 进入告警管理页，然后点击 新建按钮进入创建告警规则页。按以下步骤创建告警规则：
 选择集群（这里需要选择 INFINI Console 存储数据的 Elasticsearch 集群，也就是在配置文件 console.yml 配置的 Elasticsearch 集群，如果没有注册到 INFINI Console , 请先注册） 输入告警对象 .infini_metrics*（选择 Elasticsearch 集群下的索引，或者输入索引 pattern, 这里因为 INFINI Console 采集的监控数据存放在索引 .infini_metrics 里面） 输入筛选条件（ Elasticsearch 查询 DSL ） 这里我们需要过滤监控指标类别为 index_stats，并且索引名称不能为 _all, DSL 如下：  {&amp;quot;bool&amp;quot;: {&amp;quot;must&amp;quot;: [{&amp;quot;term&amp;quot;: {&amp;quot;metadata.</description>
    </item>
    
    <item>
      <title>如何监控 Elasticsearch 集群健康状态</title>
      <link>/docs/latest/console/tutorials/cluster_health_change/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/cluster_health_change/</guid>
      <description>如何监控 Elasticsearch 集群健康状态#简介#很多时候 Elasticsearch 集群会因为某些原因，集群健康状态会变为红色，这个时候 Elasticsearch 集群至少存在一个主分片未分配或者丢失。所以监控 Elasticsearch 集群 健康状态是很有必要的。本文将介绍如何使用 INFINI Console 告警功能监控 Elasticsearch 集群 健康状态。
准备# 下载并安装最新版 INFINI Console 使用INFINI Console 注册 Elasticsearch 集群  创建告警规则#在浏览器中打开 INFINI Console, 点击左侧菜单 告警管理》规则管理 进入告警管理页，然后点击 新建按钮进入创建告警规则页。按以下步骤创建告警规则：
 选择集群（这里需要选择 INFINI Console 存储数据的 Elasticsearch 集群，也就是在配置文件 console.yml 配置的 Elasticsearch 集群，如果没有注册到 INFINI Console , 请先注册） 选择告警对象 .infini_metrics（选择 Elasticsearch 集群下的索引，或者输入索引 pattern, 这里因为 INFINI Console 采集的监控数据存放在索引 .infini_metrics 里面） 输入筛选条件（ Elasticsearch 查询 DSL ） 这里我们需要过滤监控指标类别为 cluster_health，并且健康状态为红色的数据，DSL 如下：  {&amp;quot;bool&amp;quot;: {&amp;quot;must&amp;quot;: [{&amp;quot;match&amp;quot;: {&amp;quot;payload.</description>
    </item>
    
    <item>
      <title>如何监控 Elasticsearch 集群节点磁盘使用率</title>
      <link>/docs/latest/console/tutorials/cluster_node_disk_usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/cluster_node_disk_usage/</guid>
      <description>如何监控 Elasticsearch 集群节点磁盘使用率#简介#当系统磁盘使用率过高时，Elasticsearch 集群会出现数据写入不进去的情况，这样很可能导致数据丢失，所以监控 Elasticsearch 集群 节点磁盘使用率是很有必要的。本文将介绍如何使用 INFINI Console 告警功能监控 Elasticsearch 集群 节点磁盘的使用率。
准备# 下载并安装最新版 INFINI Console 使用INFINI Console 注册 Elasticsearch 集群  创建告警规则#在浏览器中打开 INFINI Console, 点击左侧菜单 告警管理》规则管理 进入告警管理页，然后点击 新建按钮进入创建告警规则页。按以下步骤创建告警规则：
 选择集群（这里需要选择 INFINI Console 存储数据的 Elasticsearch 集群，也就是在配置文件 console.yml 配置的 Elasticsearch 集群，如果没有注册到 INFINI Console , 请先注册） 输入告警对象 .infini_metrics*（选择 Elasticsearch 集群下的索引，或者输入索引 pattern, 这里因为 INFINI Console 采集的监控数据存放在索引 .infini_metrics 里面） 输入筛选条件（ Elasticsearch 查询 DSL ） 这里我们需要过滤监控指标类别为 node_stats，DSL 如下：  {&amp;quot;bool&amp;quot;: {&amp;quot;must&amp;quot;: [{&amp;quot;term&amp;quot;: {&amp;quot;metadata.</description>
    </item>
    
    <item>
      <title>如何监控 Elasticsearch 集群节点的 CPU 使用率</title>
      <link>/docs/latest/console/tutorials/cluster_node_cpu_usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/cluster_node_cpu_usage/</guid>
      <description>如何监控 Elasticsearch 集群节点的 CPU 使用率#简介#本文将介绍如何使用 INFINI Console 监控 Elasticsearch 集群节点磁盘的使用率，并进行告警。
准备# 下载并安装最新版 INFINI Console 使用INFINI Console 注册 Elasticsearch 集群  创建告警规则#在浏览器中打开 INFINI Console, 点击左侧菜单 告警管理》规则管理 进入告警管理页，然后点击 新建按钮进入创建告警规则页。按以下步骤创建告警规则：
 选择集群（这里需要选择 INFINI Console 存储数据的 Elasticsearch 集群，也就是在配置文件 console.yml 配置的 Elasticsearch 集群，如果没有注册到 INFINI Console , 请先注册） 输入告警对象 .infini_metrics*（选择 Elasticsearch 集群下的索引，或者输入索引 pattern, 这里因为 INFINI Console 采集的监控数据存放在索引 .infini_metrics 里面） 输入筛选条件（ Elasticsearch 查询 DSL ） 这里我们需要过滤监控指标类别为 node_stats 及元数据分类为 elasticsearch，DSL 如下：  {&amp;quot;bool&amp;quot;: {&amp;quot;must&amp;quot;: [{&amp;quot;term&amp;quot;: {&amp;quot;metadata.</description>
    </item>
    
    <item>
      <title>如何监控 Elasticsearch 集群节点的 JVM 使用率</title>
      <link>/docs/latest/console/tutorials/cluster_node_jvm_usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/cluster_node_jvm_usage/</guid>
      <description>如何监控 Elasticsearch 集群节点的 JVM 使用率#简介#本文将介绍如何使用 INFINI Console 监控 Elasticsearch 集群节点 JVM 的使用率，并进行告警。
准备# 下载并安装最新版 INFINI Console 使用INFINI Console 注册 Elasticsearch 集群  创建告警规则#在浏览器中打开 INFINI Console, 点击左侧菜单 告警管理》规则管理 进入告警管理页，然后点击 新建按钮进入创建告警规则页。按以下步骤创建告警规则：
 选择集群（这里需要选择 INFINI Console 存储数据的 Elasticsearch 集群，也就是在配置文件 console.yml 配置的 Elasticsearch 集群，如果没有注册到 INFINI Console , 请先注册） 输入告警对象 .infini_metrics*（选择 Elasticsearch 集群下的索引，或者输入索引 pattern, 这里因为 INFINI Console 采集的监控数据存放在索引 .infini_metrics 里面） 输入筛选条件（ Elasticsearch 查询 DSL ） 这里我们需要过滤监控指标类别为 node_stats 及元数据分类为 elasticsearch，DSL 如下：  {&amp;quot;bool&amp;quot;: {&amp;quot;must&amp;quot;: [{&amp;quot;term&amp;quot;: {&amp;quot;metadata.</description>
    </item>
    
    <item>
      <title>如何使用 INFINI 迁移功能</title>
      <link>/docs/latest/console/tutorials/data_migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/latest/console/tutorials/data_migration/</guid>
      <description>如何使用 INFINI 迁移功能#简介#本文将介绍如何使用 INFINI Console 和 INFINI Gateway 来迁移 Elasticsearch 索引数据。
准备# 下载并安装最新版 INFINI Console (版本要求 0.7 及以上) 下载并安装最新版的 INFINI Gateway (版本要求 1.9 及以上) 两个 Elasticsearch 集群  Gateway 迁移配置#配置文件名为 migration.yml
path.data: datapath.logs: logprogress_bar.enabled: falsestats.no_buffer: trueelasticsearch:- name: task_fromenabled: trueschema: httphosts:- 192.168.3.6:9200traffic_control: #global traffic controlmax_bps_per_node: 209715200 #max total bytes send to es per node, 200MB/smax_qps_per_node: 20000 #max total requests send to es per node, 20k/sdiscovery: # auto discovery elasticsearch cluster nodesenabled: truerefresh:enabled: trueinterval: 60spipeline:- name: target_indexingauto_start: truekeep_running: trueprocessor:- disorder_bulk_indexing:max_worker_size: 10detect_interval: 100bulk:compress: truebatch_size_in_mb: 20batch_size_in_docs: 5000invalid_queue: bulk_indexing_400queues:type: scroll_docsconsumer:fetch_max_messages: 1000- name: task_statsauto_start: truekeep_running: trueprocessor:- dynamic_task_stats:detect_interval: 10000pipeline.</description>
    </item>
    
  </channel>
</rss>
